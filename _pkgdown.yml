url: https://readr.tidyverse.org

template:
  package: tidytemplate
  bootstrap: 5

  includes:
    in_header: |
      <script defer data-domain="readr.tidyverse.org,all.tidyverse.org" src="https://plausible.io/js/plausible.js"></script>

development:
  mode: auto

home:
  links:
  - text: Learn more
    href: http://r4ds.had.co.nz/data-import.html

news:
  releases:
  - text: "Version 2.1.0"
    href: https://www.tidyverse.org/blog/2021/11/readr-2-1-0-lazy/
  - text: "Version 2.0.0"
    href: https://www.tidyverse.org/blog/2021/07/readr-2-0-0/
  - text: "Version 1.4.0"
    href: https://www.tidyverse.org/blog/2020/10/readr-1-4-0/
  - text: "Version 1.3.1"
    href: https://www.tidyverse.org/blog/2018/12/readr-1-3-1/
  - text: "Version 1.0.0"
    href: https://www.rstudio.com/blog/readr-1-0-0/
  - text: "Version 0.2.0"
    href: https://www.rstudio.com/blog/readr-0-2-0/
  - text: "Version 0.1.0"
    href: https://www.rstudio.com/blog/readr-0-1-0/

reference:
- title: Read rectangular files
  desc: >
    These functions parse rectangular files (like csv or fixed-width format)
    into tibbles. They specify the overall structure of the file, and how each
    line is divided up into fields.
  contents:
  - read_delim
  - read_fwf
  - read_log
  - read_table

- title: Column specification
  desc: >
    The column specification describes how each column is parsed from a
    character vector in to a more specific data type. readr does make
    an educated guess about the type of each column, but you'll need override
    those guesses when it gets them wrong.
  contents:
  - problems
  - cols
  - cols_condense
  - spec_delim

- title: Column parsers
  desc: >
    Column parsers define how a single column is parsed, or how to parse a single
    vector. Each parser comes in two forms: `parse_xxx()` which is used to parse
    vectors that already exist in R and `col_xxx()` which is used to parse
    vectors as they are loaded by a `read_xxx()` function.
  contents:
  - parse_character
  - parse_datetime
  - parse_factor
  - parse_guess
  - parse_number
  - col_skip

- title: Locale controls
  desc: >
    The "locale" controls all options that vary from country-to-country or
    language-to-language. This includes things like the character used as
    the decimal mark, the names of days of the week, and the encoding. See
    `vignette("locales")` for more details.
  contents:
  - locale
  - date_names

- title: Write rectangular files
  desc: >
    Despite its name, readr also provides a number of functions to __write__
    data frames to disk, or to convert them to in-memory strings.
  contents:
  - format_csv
  - write_csv

- title: Readr editions
  desc: >
    readr supports two editions of parser.
    Version one is a single threaded eager parser that readr used by default from its first release to version 1.4.0.
    Version two is a multi-threaded lazy parser used by default from readr 2.0.0 onwards.
  contents:
    - with_edition
    - edition_get

- title: Read non-rectangular files
  desc: >
    These functions parse non-rectangular files (like csv or fixed-width format)
    into long (so-called melted) format. They specify the overall structure of
    the file, and how each line is divided up into fields.
  contents:
  - melt_delim
  - melt_fwf
  - melt_table

- title: Low-level IO and debugging tools
  desc: >
    These functions can be used with non-rectangular files, binary data,
    and to help debug rectangular files that fail to parse.
  contents:
  - read_file
  - read_lines
  - read_rds
  - read_builtin
  - count_fields
  - guess_encoding
  - type_convert
  - readr_example
  - clipboard
  - show_progress
  - readr_threads
  - should_show_types
  - should_read_lazy
